{"version":3,"sources":["components/QuoteBox/QuoteBox.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/QuoteBox/QuoteBox.module.css"],"names":["QuoteBox","props","color","quoteData","quote","author","restProps","className","s","quoteBox","quoteText","style","transition","icon","text","quoteAuthor","buttons","btn","btnNewQuote","background","onClick","changeColor","changeQuote","colors","quotesData","id","v1","App","randomColor","Math","floor","random","length","randomQuote","quotes","useState","currentColor","setCurrentColor","currentQuote","setCurrentQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sRAeO,SAASA,EAASC,GAA2B,IAC1CC,EAAmDD,EAAnDC,MADyC,EACUD,EAA5CE,UAAYC,EADsB,EACtBA,MAAOC,EADe,EACfA,OAAYC,EADG,YACUL,EADV,uBAQhD,OACG,sBAAKM,UAAWC,IAAEC,SAAlB,UACG,sBAAKF,UAAWC,IAAEE,UAAWC,MAAO,CAACT,MAAM,GAAD,OAAKA,GAASU,WAAY,gCAApE,UACG,sBAAML,UAAWC,IAAEK,KAAnB,SAAyB,cAAC,IAAD,MACzB,sBAAMN,UAAWC,IAAEM,KAAnB,SAA0BV,OAG7B,qBAAKG,UAAWC,IAAEO,YAAaJ,MAAO,CAACT,MAAM,GAAD,OAAKA,GAASU,WAAY,gCAAtE,SACG,uBAAML,UAAWC,IAAEH,OAAnB,eAA8BA,OAEjC,qBAAKE,UAAWC,IAAEQ,QAAlB,SAIG,wBAAQT,UAAS,UAAKC,IAAES,IAAP,YAAcT,IAAEU,aACzBP,MAAO,CAACQ,WAAW,GAAD,OAAKjB,GAASU,WAAY,qBAC5CQ,QArBU,WACxBd,EAAUe,cACVf,EAAUgB,eAiBJ,4BC1BZ,IAAMC,EAAwB,CAC3B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEGC,EAA+B,CAClC,CACGC,GAAIC,cACJtB,MAAO,+CACPC,OAAQ,YAEX,CACGoB,GAAIC,cACJtB,MAAO,gHACPC,OAAQ,WAEX,CACGoB,GAAIC,cACJtB,MAAO,8EACPC,OAAQ,kBAEX,CACGoB,GAAIC,cACJtB,MAAO,+OACPC,OAAQ,cAEX,CACGoB,GAAIC,cACJtB,MAAO,+DACPC,OAAQ,aAEX,CACGoB,GAAIC,cACJtB,MAAO,yIACPC,OAAQ,aAEX,CACGoB,GAAIC,cACJtB,MAAO,6EACPC,OAAQ,uBAEX,CACGoB,GAAIC,cACJtB,MAAO,+FACPC,OAAQ,oBAEX,CACGoB,GAAIC,cACJtB,MAAO,qFACPC,OAAQ,aAEX,CACGoB,GAAIC,cACJtB,MAAO,yEACPC,OAAQ,iBAsBCsB,MAlBf,WACG,IAAMC,EAAc,SAACL,GAAD,OAA2BA,EAAOM,KAAKC,MAAMD,KAAKE,SAAWR,EAAOS,UAClFC,EAAc,SAACC,GAAD,OAA8BA,EAAOL,KAAKC,MAAMD,KAAKE,SAAWG,EAAOF,UAF/E,EAI4BG,mBAAiBP,EAAYL,IAJzD,mBAILa,EAJK,KAISC,EAJT,OAK4BF,mBAAoBF,EAAYT,IAL5D,mBAKLc,EALK,KAKSC,EALT,KAOZ,OACM,qBAAKhC,UAAU,MAAMI,MAAO,CAACQ,WAAW,GAAD,OAAKiB,GAAgBlC,MAAM,GAAD,OAAKkC,GAAgBxB,WAAY,qBAAlG,SACG,cAACZ,EAAD,CAAUE,MAAOkC,EACPjC,UAAWmC,EACXjB,YAAa,kBAAMgB,EAAgBT,EAAYL,KAC/CD,YAAa,kBAAMiB,EAAgBN,EAAYT,UC5EtDgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCrBAc,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,4BAA4B,KAAO,uBAAuB,YAAc,8BAA8B,QAAU,0BAA0B,IAAM,sBAAsB,YAAc,8BAA8B,QAAU,6B","file":"static/js/main.d2ec4df2.chunk.js","sourcesContent":["import React from 'react';\nimport s from './QuoteBox.module.css';\nimport {FaQuoteLeft} from 'react-icons/fa';\nimport {FaTwitter} from 'react-icons/fa';\nimport {FaTumblr} from 'react-icons/fa';\nimport {QuoteType} from '../../App';\nimport {CSSTransition} from 'react-transition-group';\n\ntype QuoteBoxPropsType = {\n   color: string\n   quoteData: QuoteType\n   changeColor: () => void\n   changeQuote: () => void\n}\n\nexport function QuoteBox(props: QuoteBoxPropsType) {\n   const {color, quoteData: {quote, author}, ...restProps} = props;\n\n   const onChangeQuoteClick = () => {\n      restProps.changeColor();\n      restProps.changeQuote();\n   }\n\n   return (\n      <div className={s.quoteBox}>\n         <div className={s.quoteText} style={{color: `${color}`, transition: 'color 1000ms, opacity 1000ms'}}>\n            <span className={s.icon}><FaQuoteLeft/></span>\n            <span className={s.text}>{quote}</span>\n         </div>\n\n         <div className={s.quoteAuthor} style={{color: `${color}`, transition: 'color 1000ms, opacity 1000ms'}}>\n            <span className={s.author}>- {author}</span>\n         </div>\n         <div className={s.buttons}>\n            {/*<button className={`${s.btn} ${s.btnPost}`} style={{background: `${color}`, transition: 'background 1000ms'}}><FaTwitter/></button>\n            <button className={`${s.btn} ${s.btnPost}`} style={{background: `${color}`, transition: 'background 1000ms'}}><FaTumblr/></button>*/}\n\n            <button className={`${s.btn} ${s.btnNewQuote}`}\n                    style={{background: `${color}`, transition: 'background 1000ms'}}\n                    onClick={onChangeQuoteClick}>New quote\n            </button>\n         </div>\n      </div>\n   );\n}","import React, {useState} from 'react';\nimport {v1} from 'uuid';\nimport './App.css';\nimport {QuoteBox} from './components/QuoteBox/QuoteBox';\n\nexport type QuoteType = {\n   id: string\n   quote: string\n   author: string\n};\n\nconst colors: Array<string> = [\n   '#16a085',\n   '#27ae60',\n   '#2c3e50',\n   '#f39c12',\n   '#e74c3c',\n   '#9b59b6',\n   '#FB6964',\n   '#342224',\n   '#472E32',\n   '#BDBB99',\n   '#77B1A9',\n   '#73A857'\n];\nconst quotesData: Array<QuoteType> = [\n   {\n      id: v1(),\n      quote: 'Either you run the day, or the day runs you.',\n      author: 'Jim Rohn',\n   },\n   {\n      id: v1(),\n      quote: 'You can’t fall if you don’t climb. But there’s no joy in living your whole life on the ground.',\n      author: 'Unknown',\n   },\n   {\n      id: v1(),\n      quote: 'Nothing is impossible, the word itself says, “I’m possible!”',\n      author: 'Audrey Hepburn',\n   },\n   {\n      id: v1(),\n      quote: 'Twenty years from now you will be more disappointed by the things that you didn’t do than by the ones you did do, so throw off the bowlines, sail away from safe harbor, catch the trade winds in your sails. Explore, Dream, Discover.',\n      author: 'Mark Twain',\n   },\n   {\n      id: v1(),\n      quote: 'Life shrinks or expands in proportion to one’s courage.',\n      author: 'Anais Nin',\n   },\n   {\n      id: v1(),\n      quote: 'What’s money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.\\n',\n      author: 'Bob Dylan',\n   },\n   {\n      id: v1(),\n      quote: 'The only person you are destined to become is the person you decide to be.',\n      author: 'Ralph Waldo Emerson',\n   },\n   {\n      id: v1(),\n      quote: 'Challenges are what make life interesting and overcoming them is what makes life meaningful.',\n      author: 'Joshua J. Marine',\n   },\n   {\n      id: v1(),\n      quote: 'There is only one way to avoid criticism: do nothing, say nothing, and be nothing.',\n      author: 'Aristotle',\n   },\n   {\n      id: v1(),\n      quote: 'You can’t use up creativity. The more you use, the more you have.',\n      author: 'Maya Angelou',\n   }\n];\n\nfunction App() {\n   const randomColor = (colors: Array<string>) => colors[Math.floor(Math.random() * colors.length)];\n   const randomQuote = (quotes: Array<QuoteType>) => quotes[Math.floor(Math.random() * quotes.length)];\n\n   const [currentColor, setCurrentColor] = useState<string>(randomColor(colors));\n   const [currentQuote, setCurrentQuote] = useState<QuoteType>(randomQuote(quotesData));\n\n   return (\n         <div className=\"App\" style={{background: `${currentColor}`, color: `${currentColor}`, transition: 'background 1000ms'}}>\n            <QuoteBox color={currentColor}\n                      quoteData={currentQuote}\n                      changeColor={() => setCurrentColor(randomColor(colors))}\n                      changeQuote={() => setCurrentQuote(randomQuote(quotesData))}\n            />\n         </div>\n   );\n};\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {v1} from 'uuid';\nexport type QuoteType = {\n   id: string\n   quote: string\n   author: string\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteBox\":\"QuoteBox_quoteBox__27VoN\",\"quoteText\":\"QuoteBox_quoteText__3bn8_\",\"icon\":\"QuoteBox_icon__2wU3j\",\"quoteAuthor\":\"QuoteBox_quoteAuthor__ogvwc\",\"buttons\":\"QuoteBox_buttons__jqT1p\",\"btn\":\"QuoteBox_btn__186RK\",\"btnNewQuote\":\"QuoteBox_btnNewQuote__2U2nr\",\"btnPost\":\"QuoteBox_btnPost__2cOvg\"};"],"sourceRoot":""}